{"version":3,"sources":["components/Modal/modal.module.css","components/ImageGalleryItem/imageGalleryItem.module.css","components/ImageGallery/imageGallery.module.css","components/Button/button.module.css","App.module.css","components/Searchbar/searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","queryValue","currentTarget","toLowerCase","trim","ImageGalleryItem","webformatURL","tags","largeImageURL","src","alt","ImageGallery","hits","onClick","map","id","Button","document","querySelector","GalleryLoader","color","height","width","axios","defaults","baseURL","App","setHits","currentPage","setCurrentPage","isLoading","setIsLoading","error","setError","useEffect","searchQuery","get","then","response","data","fetchHits","responseHits","prevHits","prevCurrentPage","catch","message","finally","shouldRenderLoadMoreButton","length","Container","this","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.58b2cea7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"modal_Overlay__1OmXj\",\"Modal\":\"modal_Modal__fZgox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"imageGalleryItem_ImageGalleryItem__3KOHO\",\"ImageGalleryItemImage\":\"imageGalleryItem_ImageGalleryItemImage__3N8q7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"imageGallery_ImageGallery__1fS-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__2hNM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__CL1xa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"searchbar_Searchbar__1cXK8\",\"SearchForm\":\"searchbar_SearchForm__3DGKE\",\"SearchFormButton\":\"searchbar_SearchFormButton__2pHpp\",\"SearchFormButtonLabel\":\"searchbar_SearchFormButtonLabel__23MJP\",\"SearchFormInput\":\"searchbar_SearchFormInput__1ytCq\"};","// Модули\n// import React, { Component } from 'react';\nimport { useState } from 'react';\n\n// Стили\nimport styles from '../Searchbar/searchbar.module.css';\n\n\nexport default function Searchbar({onSubmit}) {\n  const [query, setQuery] = useState('');\n  \n  const handleChange = e => {\n    const queryValue = e.currentTarget.value.toLowerCase().trim();\n    setQuery(queryValue)\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n     \n    onSubmit(query);\n\n    setQuery('');\n  };\n\n      return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={query}\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    );\n}\n\n// class Searchbar extends Component {\n//   state = { query: '' };\n\n//   handleChange = e => {\n//     this.setState({\n//       query: e.currentTarget.value,\n//     });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state.query);\n\n//     this.setState({ query: '' });\n//   };\n\n//   render() {\n//     return (\n//       <header className={styles.Searchbar}>\n//         <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n//           <button type=\"submit\" className={styles.SearchFormButton}>\n//             <span className={styles.SearchFormButtonLabel}>Search</span>\n//           </button>\n\n//           <input\n//             className={styles.SearchFormInput}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             value={this.state.query}\n//             onChange={this.handleChange}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// export default Searchbar;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Стили\nimport styles from '../ImageGalleryItem/imageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, tags, largeImageURL }) => (\n  <li className={styles.ImageGalleryItem}>\n    <img src={webformatURL} alt={tags} data-url={largeImageURL} />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Компоненты\nimport ImageGalleryItem from '../ImageGalleryItem';\n\n// Стили\nimport styles from '../ImageGallery/imageGallery.module.css';\n\nconst ImageGallery = ({ hits, onClick }) => (\n  <ul className={styles.ImageGallery} onClick={onClick}>\n    {hits.map(({ id, webformatURL, largeImageURL, tags }) => (\n      <ImageGalleryItem\n        key={id}\n        webformatURL={webformatURL}\n        tags={tags}\n        largeImageURL={largeImageURL}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  hits: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Стили\nimport styles from './button.module.css';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" onClick={onClick} className={styles.Button}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","// Модули\n// import React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\n// Стили\nimport styles from './modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({children, onClose}) {\n  const  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    }\n  });\n\n      return createPortal(\n      <div className={styles.Overlay} onClick={handleBackdropClick}>\n        <div className={styles.Modal}>{children}</div>\n      </div>,\n      modalRoot,\n    );\n}\n\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n// class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = e => {\n//     if (e.code === 'Escape') {\n//       this.props.onClose();\n//     }\n//   };\n\n//   handleBackdropClick = e => {\n//     if (e.currentTarget === e.target) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     return createPortal(\n//       <div className={styles.Overlay} onClick={this.handleBackdropClick}>\n//         <div className={styles.Modal}>{this.props.children}</div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n\n// Modal.propTypes = {\n//   children: PropTypes.node.isRequired,\n//   onClose: PropTypes.func.isRequired,\n// };\n\n// export default Modal;\n","// Модули\nimport React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst GalleryLoader = () => (\n  <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n);\n\nexport default GalleryLoader;\n","// Модули\n// import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\n\n// Компоненты\nimport axios from 'axios';\n// import * as newsApi from './services/news-api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport GalleryLoader from './components/Loader';\n\n// Стили\nimport styles from './App.module.css';\n\n\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst KEY = '21824668-10aeb8c8af54ec25684dd6884&';\n\nconst fetchHits = ({ searchQuery = '', currentPage = 1 }) =>\n  axios\n    .get(\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(response => response.data.hits);\n\n\n\n\nexport default function App() {\n\n  const [hits, setHits] = useState([]);\n  const [query, setQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchHits({ searchQuery: query, currentPage }).then(\n      responseHits => {\n        setHits(prevHits => [...prevHits, responseHits]);\n        setCurrentPage(prevCurrentPage => prevCurrentPage + 1);\n      })\n      .catch(error => setError(error.message))\n    .finally(() => setIsLoading(false));\n  }, [query, currentPage]);\n\n\n  \n  const onChangeQuery = query => {\n    setQuery(query);\n    setCurrentPage(1);\n    setHits([]);\n    setError(null)\n  };\n\n  const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\n\n  return (\n   \n    <div className={styles.Container}>\n      {error && <h1>Ошибка</h1>}\n\n      <Searchbar onSubmit={onChangeQuery} />\n      \n      <ImageGallery hits={hits} />\n      \n      {isLoading && <GalleryLoader />}\n\n      {shouldRenderLoadMoreButton && <Button onClick={this.fetchHits} />}\n\n        {/* <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery hits={hits} onClick={this.handleImageClick} />\n\n        {isLoading && <GalleryLoader />}\n\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchHits} />}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal} onClick={this.handleImageClick}>\n            <img src={url} alt={tag} />\n          </Modal>\n        )} */}\n      </div>\n    );\n\n}\n\n// class App extends Component {\n//   state = {\n//     hits: [],\n//     currentPage: 1,\n//     currentPageImages: [],\n//     searchQuery: '',\n//     isLoading: false,\n//     error: null,\n//     showModal: false,\n//     url: '',\n//     tag: '',\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       this.fetchHits();\n//     }\n//   }\n\n//   onChangeQuery = query => {\n//     this.setState({\n//       searchQuery: query,\n//       currentPage: 1,\n//       hits: [],\n//       error: null,\n//       url: '',\n//       tag: '',\n//     });\n//   };\n\n//   fetchHits = () => {\n//     const { searchQuery, currentPage } = this.state;\n//     const options = { searchQuery, currentPage };\n//     this.setState({ isLoading: true });\n//     newsApi\n//       .fetchHits(options)\n//       .then(hits => {\n//         this.setState(prevState => ({\n//           hits: [...prevState.hits, ...hits],\n//           currentPage: prevState.currentPage + 1,\n//           currentPageImages: [...hits],\n//         }));\n//         if (hits.length === 0) {\n//           this.setState({\n//             error: 'Nothing was find by your query. Try again.',\n//           });\n//         }\n//       })\n//       .then(() => {\n//         window.scrollTo({\n//           top: document.documentElement.scrollHeight,\n//           behavior: 'smooth',\n//         });\n//       })\n//       .catch(error => this.setState({ error }))\n//       .finally(() => this.setState({ isLoading: false }));\n//   };\n\n//   fetchHits = () => {\n//     const { searchQuery, currentPage } = this.state;\n//     const options = { searchQuery, currentPage };\n\n//     this.setState({ isLoading: true });\n\n//     newsApi\n//       .fetchHits(options)\n//       .then(hits => {\n//         this.setState(prevState => ({\n//           hits: [...prevState.hits, ...hits],\n//           currentPage: prevState.currentPage + 1,\n//         }));\n//         this.scrollDown();\n//       })\n//       .catch(error => this.setState({ error }))\n//       .finally(() => this.setState({ isLoading: false }));\n//   };\n\n//   scrollDown = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollTop + window.innerHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   handleImageClick = ({ target }) => {\n//     if (target.nodeName !== 'IMG') {\n//       return;\n//     }\n//     const { url } = target.dataset;\n//     const tag = target.alt;\n//     this.setState({\n//       url,\n//       tag,\n//     });\n//     this.toggleModal();\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   render() {\n//     const { hits, isLoading, showModal, url, tag } = this.state;\n//     const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\n\n//     return (\n//       <div className={styles.Container}>\n//         <Searchbar onSubmit={this.onChangeQuery} />\n\n//         <ImageGallery hits={hits} onClick={this.handleImageClick} />\n\n//         {isLoading && <GalleryLoader />}\n\n//         {shouldRenderLoadMoreButton && <Button onClick={this.fetchHits} />}\n\n//         {showModal && (\n//           <Modal onClose={this.toggleModal} onClick={this.handleImageClick}>\n//             <img src={url} alt={tag} />\n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","// Модули\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Компоненты\nimport App from './App';\n\n// Стили\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}