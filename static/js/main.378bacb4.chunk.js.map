{"version":3,"sources":["components/ImageGalleryItem/imageGalleryItem.module.css","components/Modal/modal.module.css","components/ImageGallery/imageGallery.module.css","components/Button/button.module.css","App.module.css","components/Searchbar/searchbar.module.css","services/news-api.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","searchQuery","currentPage","pageSize","get","then","response","data","hits","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","queryValue","currentTarget","toLowerCase","trim","ImageGallery","children","ImageGalleryItem","hitsId","srcWebformat","onClick","src","alt","ImageGalleryItemImage","Button","modalRoot","document","querySelector","Modal","onClose","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","target","GalleryLoader","color","height","width","App","setHits","setSearchQuery","setCurrentPage","isLoading","setIsLoading","error","setError","largeImageURL","setLargeImageURL","isModalOpen","setIsModalOpen","fetchHits","scrollTo","top","documentElement","scrollHeight","behavior","option","api","picturesArr","catch","finally","toggleModal","prevState","shouldRenderLoadMoreButton","length","Container","map","id","webformatURL","pictureId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.378bacb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"imageGalleryItem_ImageGalleryItem__3KOHO\",\"ImageGalleryItemImage\":\"imageGalleryItem_ImageGalleryItemImage__3N8q7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"modal_Overlay__1OmXj\",\"Modal\":\"modal_Modal__fZgox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"imageGallery_ImageGallery__1fS-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__2hNM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__CL1xa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"searchbar_Searchbar__1cXK8\",\"SearchForm\":\"searchbar_SearchForm__3DGKE\",\"SearchFormButton\":\"searchbar_SearchFormButton__2pHpp\",\"SearchFormButtonLabel\":\"searchbar_SearchFormButtonLabel__23MJP\",\"SearchFormInput\":\"searchbar_SearchFormInput__1ytCq\"};","\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\nconst KEY = \"21824668-10aeb8c8af54ec25684dd6884\";\n\nconst fetchHits = ({ searchQuery = \"\", currentPage = 1, pageSize = 12 }) => {\n  return axios\n    .get(\n      `/?key=${KEY}&q=${searchQuery}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\n    )\n    .then((response) => response.data.hits);\n};\n\nexport default { fetchHits };\n","// Модули\nimport { useState } from 'react';\n\n// Стили\nimport styles from '../Searchbar/searchbar.module.css';\n\n\nexport default function Searchbar({onSubmit}) {\n  const [query, setQuery] = useState('');\n  \n  const handleChange = e => {\n    const queryValue = e.currentTarget.value.toLowerCase().trim();\n    setQuery(queryValue)\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n     \n    onSubmit(query);\n\n    setQuery('');\n  };\n\n      return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={query}\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    );\n}","import styles from '../ImageGallery/imageGallery.module.css';\n\nconst ImageGallery = ({ children }) => {\n  return <ul className={styles.ImageGallery}>{children}</ul>;\n};\n\nexport default ImageGallery;\n\n\n// // Модули\n// import React from 'react';\n// import PropTypes from 'prop-types';\n\n// // Компоненты\n// import ImageGalleryItem from '../ImageGalleryItem';\n\n// // Стили\n// import styles from '../ImageGallery/imageGallery.module.css';\n\n// const ImageGallery = ({ hits, onClick }) => (\n//   <ul className={styles.ImageGallery} onClick={onClick}>\n//     {hits.map(({ id, webformatURL, largeImageURL, tags }) => (\n//       <ImageGalleryItem\n//         key={id}\n//         webformatURL={webformatURL}\n//         tags={tags}\n//         largeImageURL={largeImageURL}\n//       />\n//     ))}\n//   </ul>\n// );\n\n// ImageGallery.propTypes = {\n//   hits: PropTypes.array.isRequired,\n//   onClick: PropTypes.func.isRequired,\n// };\n\n// export default ImageGallery;\n","import styles from '../ImageGalleryItem/imageGalleryItem.module.css';\nconst ImageGalleryItem = ({ hitsId, srcWebformat, onClick }) => {\n  return (\n    <li className={styles.ImageGalleryItem} onClick={onClick}>\n      <img src={srcWebformat} alt=\"\" className={styles.ImageGalleryItemImage} />\n    </li>\n  );\n};\nexport default ImageGalleryItem;\n\n\n// // Модули\n// import React from 'react';\n// import PropTypes from 'prop-types';\n\n// // Стили\n// import styles from '../ImageGalleryItem/imageGalleryItem.module.css';\n\n// const ImageGalleryItem = ({ webformatURL, tags, largeImageURL }) => (\n//   <li className={styles.ImageGalleryItem}>\n//     <img src={webformatURL} alt={tags} data-url={largeImageURL} />\n//   </li>\n// );\n\n// ImageGalleryItem.propTypes = {\n//   webformatURL: PropTypes.string.isRequired,\n//   tags: PropTypes.string.isRequired,\n//   largeImageURL: PropTypes.string.isRequired,\n// };\n\n// export default ImageGalleryItem;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Стили\nimport styles from './button.module.css';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" onClick={onClick} className={styles.Button}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","// Модули\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\n// Стили\nimport styles from './modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({children, onClose}) {\n  const  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    }\n  });\n\n      return createPortal(\n      <div className={styles.Overlay} onClick={handleBackdropClick}>\n        <div className={styles.Modal}>{children}</div>\n      </div>,\n      modalRoot,\n    );\n}\n\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n","// Модули\nimport React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst GalleryLoader = () => (\n  <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n);\n\nexport default GalleryLoader;\n","// Модули\r\n// import React, { Component } from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Компоненты\r\nimport api from \"./services/news-api\";\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem'\r\nimport Button from './components/Button';\r\nimport Modal from './components/Modal';\r\nimport GalleryLoader from './components/Loader';\r\n\r\n// Стили\r\nimport styles from './App.module.css';\r\n\r\n\r\nexport default function App() {\r\n\r\n  const [hits, setHits] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n    fetchHits();\r\n  }, [searchQuery]);\r\n\r\n    useEffect(() => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [hits]);\r\n\r\n    const  onChangeQuery = query => {\r\n      setSearchQuery(query);\r\n      setHits([]);\r\n      setCurrentPage(1);\r\n      setError(null)\r\n  };\r\n\r\n  const fetchHits = () => {\r\n    const option = { searchQuery, currentPage };\r\n    setIsLoading(true);\r\n    api\r\n      .fetchHits(option)\r\n      .then(\r\n        (picturesArr) => setHits([...hits, ...picturesArr]),\r\n        setCurrentPage(currentPage + 1)\r\n      )\r\n      .catch((error) => setError(error))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const handleImageClick = (url) => {\r\n    setLargeImageURL(url);\r\n    toggleModal();\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\r\n\r\n      return (\r\n      <div className={styles.Container}>\r\n          <Searchbar onSubmit={onChangeQuery} />\r\n          {error && <h1>Ошибка</h1>}\r\n\r\n              <ImageGallery>\r\n        {hits.map(({ id, webformatURL, largeImageURL }) => (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            srcWebformat={webformatURL}\r\n            pictureId={id}\r\n            onClick={() => handleImageClick(largeImageURL)}\r\n          />\r\n        ))}\r\n      </ImageGallery>  \r\n\r\n           {/* <ImageGallery hits={hits} onClick={handleImageClick(largeImageURL)} /> */}\r\n        {/* <ImageGallery hits={hits} onClick={this.handleImageClick} /> */}\r\n\r\n        {isLoading && <GalleryLoader />}\r\n\r\n        {shouldRenderLoadMoreButton && <Button onClick={fetchHits} />}\r\n\r\n        {/* {isModalOpen && (\r\n          <Modal onClose={this.toggleModal} onClick={this.handleImageClick}>\r\n            <img src={url} alt={tag} />\r\n          </Modal>\r\n          )} */}\r\n                {isModalOpen && (\r\n        <Modal onClose={toggleModal}>\r\n          <img src={largeImageURL} alt=\"\" />\r\n        </Modal>\r\n      )}\r\n      </div>\r\n    );\r\n      \r\n    }\r\n\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     hits: [],\r\n//     currentPage: 1,\r\n//     currentPageImages: [],\r\n//     searchQuery: '',\r\n//     isLoading: false,\r\n//     error: null,\r\n//     showModal: false,\r\n//     url: '',\r\n//     tag: '',\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (prevState.searchQuery !== this.state.searchQuery) {\r\n//       this.fetchHits();\r\n//     }\r\n//   }\r\n\r\n//   onChangeQuery = query => {\r\n//     this.setState({\r\n//       searchQuery: query,\r\n//       currentPage: 1,\r\n//       hits: [],\r\n//       error: null,\r\n//       url: '',\r\n//       tag: '',\r\n//     });\r\n//   };\r\n\r\n//   fetchHits = () => {\r\n//     const { searchQuery, currentPage } = this.state;\r\n//     const options = { searchQuery, currentPage };\r\n//     this.setState({ isLoading: true });\r\n//     newsApi\r\n//       .fetchHits(options)\r\n//       .then(hits => {\r\n//         this.setState(prevState => ({\r\n//           hits: [...prevState.hits, ...hits],\r\n//           currentPage: prevState.currentPage + 1,\r\n//           currentPageImages: [...hits],\r\n//         }));\r\n//         if (hits.length === 0) {\r\n//           this.setState({\r\n//             error: 'Nothing was find by your query. Try again.',\r\n//           });\r\n//         }\r\n//       })\r\n//       .then(() => {\r\n//         window.scrollTo({\r\n//           top: document.documentElement.scrollHeight,\r\n//           behavior: 'smooth',\r\n//         });\r\n//       })\r\n//       .catch(error => this.setState({ error }))\r\n//       .finally(() => this.setState({ isLoading: false }));\r\n//   };\r\n\r\n//   fetchHits = () => {\r\n//     const { searchQuery, currentPage } = this.state;\r\n//     const options = { searchQuery, currentPage };\r\n\r\n//     this.setState({ isLoading: true });\r\n\r\n//     newsApi\r\n//       .fetchHits(options)\r\n//       .then(hits => {\r\n//         this.setState(prevState => ({\r\n//           hits: [...prevState.hits, ...hits],\r\n//           currentPage: prevState.currentPage + 1,\r\n//         }));\r\n//         this.scrollDown();\r\n//       })\r\n//       .catch(error => this.setState({ error }))\r\n//       .finally(() => this.setState({ isLoading: false }));\r\n//   };\r\n\r\n//   scrollDown = () => {\r\n//     window.scrollTo({\r\n//       top: document.documentElement.scrollTop + window.innerHeight,\r\n//       behavior: 'smooth',\r\n//     });\r\n//   };\r\n\r\n//   handleImageClick = ({ target }) => {\r\n//     if (target.nodeName !== 'IMG') {\r\n//       return;\r\n//     }\r\n//     const { url } = target.dataset;\r\n//     const tag = target.alt;\r\n//     this.setState({\r\n//       url,\r\n//       tag,\r\n//     });\r\n//     this.toggleModal();\r\n//   };\r\n\r\n//   toggleModal = () => {\r\n//     this.setState(({ showModal }) => ({\r\n//       showModal: !showModal,\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const { hits, isLoading, showModal, url, tag } = this.state;\r\n//     const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\r\n\r\n//     return (\r\n//       <div className={styles.Container}>\r\n//         <Searchbar onSubmit={this.onChangeQuery} />\r\n\r\n//         <ImageGallery hits={hits} onClick={this.handleImageClick} />\r\n\r\n//         {isLoading && <GalleryLoader />}\r\n\r\n//         {shouldRenderLoadMoreButton && <Button onClick={this.fetchHits} />}\r\n\r\n//         {showModal && (\r\n//           <Modal onClose={this.toggleModal} onClick={this.handleImageClick}>\r\n//             <img src={url} alt={tag} />\r\n//           </Modal>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","// Модули\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Компоненты\nimport App from './App';\n\n// Стили\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}